openapi: 3.0.0

info:
  title: "RP Flask REST API"
  description: "An API about people and notes"
  version: "1.0.0"

components:
  schemas:
    Client:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        address:
          type: string
        phone:
          type: string
      required:
        - id
        - name

    Delivery:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
      required:
        - id
        - description

  parameters:
    ClientIdParam:
      name: id
      in: path
      required: true
      schema:
        type: integer

paths:
  /clients:
    get:
      operationId: crud.read_all_clients
      tags:
        - "Clients"
      summary: "Get all clients"
      responses:
        "200":
          description: "OK"

    post:
      operationId: crud.create_client
      tags:
        - "Clients"
      summary: "Create a new client"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        "200":
          description: "OK"

    put:
      operationId: crud.update_client
      tags:
        - "Clients"
      summary: "Update a client"
      parameters:
        - $ref: '#/components/parameters/ClientIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Client'
      responses:
        "200":
          description: "OK" 
    
    delete:
      operationId: crud.delete_client
      tags:
        - "Clients"
      summary: "Delete a client"
      parameters:
        - $ref: '#/components/parameters/ClientIdParam'
      responses:
        "200":
          description: "OK"


  /deliveries:
    get:
      operationId: crud.read_all_deliveries
      tags:
        - "Deliveries"
      summary: "Get all deliveries"
      responses:
        "200":
          description: "OK"
    
    post:
      operationId: crud.add_delivery
      tags:
        - "Deliveries"
      summary: "Create a new delivery"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Delivery'
      responses:
        "200":
          description: "OK"
    
    put:
      operationId: crud.update_delivery
      tags:
        - "Deliveries"
      summary: "Update a delivery"
      parameters:
        - $ref: '#/components/parameters/ClientIdParam'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Delivery'
      responses:
        "200":
          description: "OK"
      
    delete:
      operationId: crud.delete_delivery
      tags:
        - "Deliveries"
      summary: "Delete a delivery"
      parameters:
        - $ref: '#/components/parameters/ClientIdParam'
      responses:
        "200":
          description: "OK"